
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Pratica10(

	//////////// CLOCK //////////
	input 		          		MAX10_CLK1_50,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		     [3:0]		VGA_B,
	output		     [3:0]		VGA_G,
	output		          		VGA_HS,
	output		     [3:0]		VGA_R,
	output		          		VGA_VS
);

	// signal declaration
	wire clk, async_rstn, sync_rstn, video_on, pixel_tick, right_k, left_k;
	wire [9:0] pixel_x, pixel_y;
	reg [11:0] rgb_reg;
	wire [11:0] rgb_next;

	assign clk = MAX10_CLK1_50;
	assign async_rstn = ~SW[0];

	AsyncInputSynchronizer (.clk(clk), 
	                        .asyncn(async_rstn), 
									.syncn(sync_rstn));
	 
	EdgeDetector right_key (.clk(clk), 
									.rstn(sync_rstn), 
									.trigger(~KEY[0]), 
									.pulse(right_k));
									
	EdgeDetector left_key (.clk(clk), 
						        .rstn(sync_rstn), 
								  .trigger(~KEY[1]), 
								  .pulse(left_k));

	// instantiate vga sync circuit
	VGASync vsync_unit (.clk(clk), 
								.rstn(sync_rstn), 
								.hsync(VGA_HS), 
								.vsync(VGA_VS), 
								.video_on(video_on), 
								.p_tick(pixel_tick), 
								.pixel_x(pixel_x), 
								.pixel_y(pixel_y));
	
	PixelGen px_gen (.clk(clk), 
						  .rstn(sync_rstn), 
						  .video_on(video_on),
						  .p_tick(pixel_tick),
						  .right_k(right_k), 
						  .left_k(left_k), 
						  .pixel_x(pixel_x), 
						  .pixel_y(pixel_y),
						  .r(rgb_next[11:8]), 
						  .g(rgb_next[7:4]), 
						  .b(rgb_next[3:0]));
						  
	// rgb buffer
	always@(posedge clk)
		if(pixel_tick)
			rgb_reg <= rgb_next;
	// output
	assign {VGA_R, VGA_G, VGA_B} = rgb_reg;



endmodule
